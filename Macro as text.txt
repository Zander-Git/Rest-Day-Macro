'==========================================
' Title:  Rest day calculation macro
' Author: Zander O'Callaghan
' Date:   13 June 2019
'==========================================
Public Catch As Long
Public startCol, iRowNum, iColNum As Integer
Sub RestDayRule()
'
'Next goal could be to have cells for user to define the starting cell and
'   for what defines a Rest/annual leave day
'

'Declare dimmensions
Dim ws As Worksheet
Set ws = Sheets("sheet1")
Dim cellValue, cellPos, varAnnual, varRestAn, varRest, arrRest(4) As String
Dim leaveCheck, EndLoop As Boolean
Catch = 0

'These variables are for the start point of the macro
'Should be the top left of the numbers
startCol = 5
iRowNum = 5
iColNum = startCol

'Variables for what to look for in the data
'varAnnual is for whatever is annual leave
'varRestAn is for rest days next to annual leave
'varRest is for rest days
varAnnual = "AL"
varRestAn = "r_"
varRest = "r"               'Rest Day, RRD, TOIL, RCD
arrRest(0) = "Rest Day"
arrRest(1) = "RRD"
arrRest(2) = "TOIL"
arrRest(3) = "RCD"
arrRest(4) = "Free Day"



With Sheets("Sheet1")
Do While EndLoop = False

'Starts the cellValue from the variables aboves
cellValue = .Cells(iRowNum, iColNum)

Select Case cellValue

    Case varAnnual, varRestAn
        If Cells(iRowNum, iColNum + 1) = varRest Then
            Cells(iRowNum, iColNum + 1) = varRestAn
            Call StartLine
        ElseIf Cells(iRowNum, iColNum - 1) = varRest Then
            Cells(iRowNum, iColNum - 1) = varRestAn
            Call StartLine
        Else
            Call NextCell
        End If
        
    Case varRest
    'When a rest day is found, either side of the cell is checked for either positive variables
        If Cells(iRowNum, iColNum + 1) = varAnnual Then
          Cells(iRowNum, iColNum) = varRestAn
          Call StartLine
        ElseIf Cells(iRowNum, iColNum - 1) = InStr(1, cellValue, varAnnual) Or InStr(1, cellValue, varRestAn) Then
            Cells(iRowNum, iColNum) = varRestAn
            Call StartLine
        Else
        Call NextCell
        End If
        
    Case vbNullString
        'MsgBox "empty boi"
        Call NextLine
    Case Else
        Call NextCell
    'Else
        'Call Error
    End Select
        
Catch = Catch + 1
    
If (Catch = 500000) Then
    MsgBox "The catch was triggered"
    EndLoop = True
ElseIf IsEmpty(cellValue) = True Then
    cellValue = .Cells(iRowNum, iColNum)
    If IsEmpty(cellValue) = True Then
        'MsgBox "Done :)"
        'MsgBox Catch
        MsgBox "done :)"
        EndLoop = True
        'screenupdate off
    End If
End If
Loop
End With
End Sub
Sub NextCell()
' Used to make the method above go to next cell
iColNum = iColNum + 1
End Sub
Sub NextLine()
' Used to make the method above go to next line
iRowNum = iRowNum + 1
Call StartLine
End Sub
Sub StartLine()
'Starts the process at the start of the current line
iColNum = startCol
End Sub
Sub Error()
MsgBox "Error"
End Sub

Sub Test_ArrayWay()

Dim AnnualLeave As String, RestDays As String, cellValueTest As String
AnnualLeave = "AL"
RestDays = "Rest Day/Free Day/TOIL/RCD/RRD"
cellValueTest = Cells(3, 3)

If Contains_Keyword(cellValueTest, RestDays) Then
    Cells(4, 4) = "Rest days"
Else
    Cells(4, 4) = "not"
End If

End Sub

Function Contains_Keyword(Descr As String, KeyWordS As String) As Boolean
Dim A() As String, IsIn As Boolean, i As Integer
A = Split(KeyWordS, "/")
IsIn = False
For i = LBound(A) To UBound(A)
    If InStr(1, Descr, A(i)) Then
        IsIn = True
        Exit For
    Else
    End If
Next i
Contains_Keyword = IsIn


End Function
