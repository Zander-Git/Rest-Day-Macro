'==========================================
' Title:  Rest day calculation macro
' Author: Zander O'Callaghan
' Date:   9th Augest 2019
'==========================================
Public Catch As Long
Public startCol, iRowNum, iColNum As Integer
Sub RestDayRule()
'
'Next goal could be to have cells for user to define the starting cell and
'   for what defines a Rest/annual leave day
'
' Key counting thing
'=SUMPRODUCT(ISNUMBER(FIND("_",F5:F500))*(SUBTOTAL(103,OFFSET(F5,ROW(F5:F500)-MIN(ROW(F5:F500)),0))))


'Declare dimmensions
Dim ws As Worksheet
Set ws = Sheets("sheet1")
Dim cellValue As String, cellValueFor As String, cellValueBac As String, varAnnual, varRestAn, varRest, arrRest(4) As String
Dim leaveCheck, EndLoop As Boolean
Catch = 0

'These variables are for the start point of the macro
'Should be the top left of the grid
startCol = 5
iRowNum = 5
iColNum = startCol

Dim AnnualLeave As String, RestDays As String, Indicator As String
AnnualLeave = "AL/Rest Day_/Free Day_/TOIL_/RCD_/RRD_"
RestDays = "Rest Day/Free Day/TOIL/RCD/RRD"
Indicator = "_"


With Sheets("Sheet1")
Do While EndLoop = False
Application.ScreenUpdating = False


'Starts the cellValue from the variables aboves
cellValue = .Cells(iRowNum, iColNum)
cellValueFor = Cells(iRowNum, iColNum + 1)
cellValueBac = Cells(iRowNum, iColNum - 1)

If Contains_Keyword(cellValue, AnnualLeave) Then
    'if annual leave
    If Contains_Keyword(cellValueFor, RestDays) Then
        Cells(iRowNum, iColNum + 1) = cellValueFor & Indicator
        Call StartLine
    ElseIf Contains_Keyword(cellValueBac, RestDays) Then
        Cells(iRowNum, iColNum - 1) = cellValueBac & Indicator
        Call StartLine
    Else
        Call NextCell
    End If
ElseIf Contains_Keyword(cellValue, RestDays) Then
    'if rest day
    If Contains_Keyword(cellValueFor, AnnualLeave) Then
        Cells(iRowNum, iColNum) = cellValue & Indicator
        Call StartLine
    ElseIf Contains_Keyword(cellValueBac, AnnualLeave) Then
        Cells(iRowNum, iColNum) = cellValue & Indicator
        Call StartLine
    Else
        Call NextCell
    End If
ElseIf (cellValue = "") Then
    Call NextLine
Else
    Call NextCell
End If

Catch = Catch + 1
    
If (Catch = 5000) Then
    MsgBox "The catch was triggered"
    Application.ScreenUpdating = True
    EndLoop = True
ElseIf (cellValue = "") Then
    cellValue = .Cells(iRowNum, iColNum)
    If (cellValue = "") Then
        Application.ScreenUpdating = True
        'MsgBox Catch
        MsgBox "done :)"
        EndLoop = True
    End If
End If
Loop
End With
End Sub
Sub NextCell()
' Used to make the method above go to next cell
iColNum = iColNum + 1
End Sub
Sub NextLine()
' Used to make the method above go to next line
iRowNum = iRowNum + 1
Call StartLine
End Sub
Sub StartLine()
'Starts the process at the start of the current line
iColNum = startCol
End Sub
Sub Error()
MsgBox "Error"
End Sub
Function Contains_Keyword(Descr As String, KeyWordS As String) As Boolean
Dim A() As String, IsIn As Boolean, i As Integer
A = Split(KeyWordS, "/")
IsIn = False
For i = LBound(A) To UBound(A)
    If (Descr = A(i)) Then
        IsIn = True
        Exit For
    Else
    End If
Next i
Contains_Keyword = IsIn

End Function
